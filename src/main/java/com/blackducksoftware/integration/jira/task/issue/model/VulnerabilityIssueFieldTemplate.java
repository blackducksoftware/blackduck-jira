/**
 * Black Duck JIRA Plugin
 *
 * Copyright (C) 2018 Black Duck Software, Inc.
 * http://www.blackducksoftware.com/
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package com.blackducksoftware.integration.jira.task.issue.model;

import java.util.HashMap;
import java.util.Map;

import com.atlassian.jira.issue.fields.CustomField;
import com.atlassian.jira.user.ApplicationUser;
import com.blackducksoftware.integration.jira.common.model.PluginField;

public class VulnerabilityIssueFieldTemplate extends BlackDuckIssueFieldTemplate {
    private final String componentVersionOriginName;
    private final String componentVersionOriginId;

    // @formatter:off
    public VulnerabilityIssueFieldTemplate(
             final ApplicationUser projectOwner
            ,final String projectName
            ,final String projectVersionName
            ,final String projectVersionUri
            ,final String projectVersionNickname
            ,final String componentName
            ,final String componentVersionName
            ,final String componentVersionUri
            ,final String componentVersionOriginName
            ,final String componentVersionOriginId
            ,final String licenseString
            ,final String licenseLink
            ,final String usagesString
            ,final String updatedTimeString
            ) {
        super(projectOwner, projectName, projectVersionName, projectVersionUri, projectVersionNickname, componentName, null, componentVersionName, componentVersionUri, licenseString, licenseLink, usagesString, updatedTimeString);
        this.componentVersionOriginName = componentVersionOriginName;
        this.componentVersionOriginId = componentVersionOriginId;
    }
    // @formatter:on

    public String getComponentVersionOriginName() {
        return componentVersionOriginName;
    }

    public String getComponentVersionOriginId() {
        return componentVersionOriginId;
    }

    @Override
    protected Map<Long, String> createAddtionalBlackDuckFieldMappings(final Map<PluginField, CustomField> customFields) {
        final Map<Long, String> policyFieldMappings = new HashMap<>();
        addCustomField(customFields, policyFieldMappings, PluginField.BLACKDUCK_CUSTOM_FIELD_COMPONENT_ORIGIN, componentVersionOriginName);
        addCustomField(customFields, policyFieldMappings, PluginField.BLACKDUCK_CUSTOM_FIELD_COMPONENT_ORIGIN_ID, componentVersionOriginId);
        return policyFieldMappings;
    }

}
