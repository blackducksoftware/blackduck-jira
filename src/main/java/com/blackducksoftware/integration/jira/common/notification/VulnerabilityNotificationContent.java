/**
 * Black Duck JIRA Plugin
 *
 * Copyright (C) 2019 Black Duck Software, Inc.
 * http://www.blackducksoftware.com/
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package com.blackducksoftware.integration.jira.common.notification;

import java.util.List;
import java.util.stream.Collectors;

import com.synopsys.integration.blackduck.api.manual.component.AffectedProjectVersion;
import com.synopsys.integration.blackduck.api.manual.component.VulnerabilitySourceQualifiedId;
import com.synopsys.integration.blackduck.service.model.ProjectVersionDescription;

public class VulnerabilityNotificationContent extends NotificationContent {
    public int newVulnerabilityCount;
    public int updatedVulnerabilityCount;
    public int deletedVulnerabilityCount;
    public List<VulnerabilitySourceQualifiedId> newVulnerabilityIds;
    public List<VulnerabilitySourceQualifiedId> updatedVulnerabilityIds;
    public List<VulnerabilitySourceQualifiedId> deletedVulnerabilityIds;
    public String componentVersion;
    public String componentName;
    public String versionName;
    public String componentVersionOriginName;
    public List<AffectedProjectVersion> affectedProjectVersions;
    public String componentVersionOriginId;

    @Override
    public boolean providesPolicyDetails() {
        return false;
    }

    @Override
    public boolean providesVulnerabilityDetails() {
        return true;
    }

    @Override
    public boolean providesProjectComponentDetails() {
        return true;
    }

    @Override
    public boolean providesLicenseDetails() {
        return false;
    }

    @Override
    public List<ProjectVersionDescription> getAffectedProjectVersionDescriptions() {
        final List<ProjectVersionDescription> projectVersionDescriptions = affectedProjectVersions
                                                                               .stream()
                                                                               .map(affectedProjectVersion -> {
                                                                                   return new ProjectVersionDescription(affectedProjectVersion.getProjectName(), affectedProjectVersion.getProjectVersionName(),
                                                                                       affectedProjectVersion.getProjectVersion());
                                                                               })
                                                                               .collect(Collectors.toList());
        return projectVersionDescriptions;
    }

    public int getNewVulnerabilityCount() {
        return newVulnerabilityCount;
    }

    public int getUpdatedVulnerabilityCount() {
        return updatedVulnerabilityCount;
    }

    public int getDeletedVulnerabilityCount() {
        return deletedVulnerabilityCount;
    }

    public List<VulnerabilitySourceQualifiedId> getNewVulnerabilityIds() {
        return newVulnerabilityIds;
    }

    public List<VulnerabilitySourceQualifiedId> getUpdatedVulnerabilityIds() {
        return updatedVulnerabilityIds;
    }

    public List<VulnerabilitySourceQualifiedId> getDeletedVulnerabilityIds() {
        return deletedVulnerabilityIds;
    }

    public String getComponentVersion() {
        return componentVersion;
    }

    public String getComponentName() {
        return componentName;
    }

    public String getVersionName() {
        return versionName;
    }

    public String getComponentVersionOriginName() {
        return componentVersionOriginName;
    }

    public List<AffectedProjectVersion> getAffectedProjectVersions() {
        return affectedProjectVersions;
    }

    public String getComponentVersionOriginId() {
        return componentVersionOriginId;
    }
}